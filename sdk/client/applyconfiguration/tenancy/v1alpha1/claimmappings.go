/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClaimMappingsApplyConfiguration represents a declarative configuration of the ClaimMappings type for use
// with apply.
type ClaimMappingsApplyConfiguration struct {
	Username *PrefixedClaimOrExpressionApplyConfiguration `json:"username,omitempty"`
	Groups   *PrefixedClaimOrExpressionApplyConfiguration `json:"groups,omitempty"`
	UID      *ClaimOrExpressionApplyConfiguration         `json:"uid,omitempty"`
	Extra    []ExtraMappingApplyConfiguration             `json:"extra,omitempty"`
}

// ClaimMappingsApplyConfiguration constructs a declarative configuration of the ClaimMappings type for use with
// apply.
func ClaimMappings() *ClaimMappingsApplyConfiguration {
	return &ClaimMappingsApplyConfiguration{}
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *ClaimMappingsApplyConfiguration) WithUsername(value *PrefixedClaimOrExpressionApplyConfiguration) *ClaimMappingsApplyConfiguration {
	b.Username = value
	return b
}

// WithGroups sets the Groups field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Groups field is set to the value of the last call.
func (b *ClaimMappingsApplyConfiguration) WithGroups(value *PrefixedClaimOrExpressionApplyConfiguration) *ClaimMappingsApplyConfiguration {
	b.Groups = value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *ClaimMappingsApplyConfiguration) WithUID(value *ClaimOrExpressionApplyConfiguration) *ClaimMappingsApplyConfiguration {
	b.UID = value
	return b
}

// WithExtra adds the given value to the Extra field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Extra field.
func (b *ClaimMappingsApplyConfiguration) WithExtra(values ...*ExtraMappingApplyConfiguration) *ClaimMappingsApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithExtra")
		}
		b.Extra = append(b.Extra, *values[i])
	}
	return b
}
